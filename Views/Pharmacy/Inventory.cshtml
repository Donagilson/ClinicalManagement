@model IEnumerable<ClinicalManagementSystem2025.Models.PharmacyInventory>

@{
    ViewData["Title"] = "Pharmacy Inventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="text-purple mb-0">
                        <i class="fas fa-boxes me-2"></i>Pharmacy Inventory
                    </h2>
                    <p class="text-muted mb-0">Manage stock levels and inventory items</p>
                </div>
                <div>
                    <a asp-action="LowStock" class="btn btn-warning me-2">
                        <i class="fas fa-exclamation-triangle me-1"></i>Low Stock Alert
                    </a>
                    <a asp-action="Index" class="btn btn-outline-purple">
                        <i class="fas fa-arrow-left me-1"></i>Back to Pharmacy
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Inventory Stats -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-boxes fa-2x text-purple mb-2"></i>
                    <h5 class="card-title">@Model.Count()</h5>
                    <p class="card-text text-muted">Total Items</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-exclamation-triangle fa-2x text-warning mb-2"></i>
                    <h5 class="card-title">@Model.Count(i => i.CurrentStock <= i.MinStockLevel)</h5>
                    <p class="card-text text-muted">Low Stock</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-clock fa-2x text-danger mb-2"></i>
                    <h5 class="card-title">@Model.Count(i => i.ExpiryDate.HasValue && i.ExpiryDate.Value < DateTime.Now.AddMonths(3))</h5>
                    <p class="card-text text-muted">Expiring Soon</p>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center">
                <div class="card-body">
                    <i class="fas fa-dollar-sign fa-2x text-success mb-2"></i>
                    <h5 class="card-title">₹@Model.Sum(i => i.SellingPrice * i.CurrentStock).ToString("F2")</h5>
                    <p class="card-text text-muted">Total Value</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Inventory Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm border-purple">
                <div class="card-header bg-purple text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-boxes me-2"></i>Inventory Items
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Medicine</th>
                                    <th>Current Stock</th>
                                    <th>Min Level</th>
                                    <th>Max Level</th>
                                    <th>Batch #</th>
                                    <th>Expiry</th>
                                    <th>Supplier</th>
                                    <th>Cost Price</th>
                                    <th>Selling Price</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    foreach (var inventory in Model)
                                    {
                                        var stockStatus = inventory.CurrentStock <= inventory.MinStockLevel ? "danger" :
                                                         inventory.ExpiryDate.HasValue && inventory.ExpiryDate.Value < DateTime.Now.AddMonths(3) ? "warning" : "success";

                                        <tr class="@(stockStatus == "danger" ? "table-danger" : stockStatus == "warning" ? "table-warning" : "")">
                                            <td>
                                                <strong>@(inventory.Medicine?.MedicineName ?? $"Medicine {inventory.MedicineId}")</strong>
                                                <br>
                                                <small class="text-muted">@(inventory.Medicine?.MedicineCode ?? $"Code: {inventory.MedicineId}")</small>
                                            </td>
                                            <td>
                                                <span class="badge fs-6 @(stockStatus == "danger" ? "bg-danger" : "bg-success")">
                                                    @inventory.CurrentStock
                                                </span>
                                            </td>
                                            <td>@inventory.MinStockLevel</td>
                                            <td>@inventory.MaxStockLevel</td>
                                            <td>@(inventory.BatchNumber ?? "N/A")</td>
                                            <td>
                                                @if (inventory.ExpiryDate != null && inventory.ExpiryDate is DateTime)
                                                {
                                                    var expiryDate = (DateTime)inventory.ExpiryDate;
                                                    @expiryDate.ToString("yyyy-MM-dd")
                                                    @if (expiryDate < DateTime.Now)
                                                    {
                                                        <span class="badge bg-danger ms-1">Expired</span>
                                                    }
                                                    else if (expiryDate < DateTime.Now.AddMonths(3))
                                                    {
                                                        <span class="badge bg-warning ms-1">Soon</span>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td>@(inventory.Supplier ?? "N/A")</td>
                                            <td>₹@inventory.CostPrice.ToString("F2")</td>
                                            <td>₹@inventory.SellingPrice.ToString("F2")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a asp-action="EditInventory" asp-route-id="@inventory.InventoryId" class="btn btn-sm btn-outline-warning" title="Edit Inventory">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-success" title="Update Stock" onclick="updateStock(@inventory.InventoryId, @inventory.CurrentStock)">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-info" title="View Details" onclick="viewInventoryDetails(@inventory.InventoryId)">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="text-center text-muted py-4">
                                            <i class="fas fa-boxes fa-3x mb-2 text-muted"></i>
                                            <p class="mb-0">No inventory items found.</p>
                                            <p class="mb-0 text-muted">Add medicines first to set up inventory.</p>
                                            <div class="mt-3">
                                                <a asp-action="Index" class="btn btn-purple btn-sm me-2">
                                                    <i class="fas fa-plus me-1"></i>Add Medicine
                                                </a>
                                                <a asp-action="AddInventory" class="btn btn-success btn-sm">
                                                    <i class="fas fa-boxes me-1"></i>Add to Inventory
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Hidden anti-forgery token for AJAX calls -->
@Html.AntiForgeryToken()

<!-- Update Stock Modal -->
<div class="modal fade" id="stockModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update Stock</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="stockForm">
                    <input type="hidden" id="inventoryId" />
                    <div class="mb-3">
                        <label for="newStock" class="form-label">Current Stock: <span id="currentStock"></span></label>
                        <input type="number" class="form-control" id="newStock" min="0" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveStock()">Update Stock</button>
            </div>
        </div>
    </div>
</div>

<style>
.text-purple {
    color: #7b68ee !important;
}

.bg-purple {
    background-color: #7b68ee !important;
}

.border-purple {
    border-color: #7b68ee !important;
}

.btn-purple {
    background-color: #7b68ee;
    border-color: #7b68ee;
    color: white;
}

.btn-purple:hover {
    background-color: #6a5acd;
    border-color: #6a5acd;
    color: white;
}

.btn-outline-purple {
    color: #7b68ee;
    border-color: #7b68ee;
}

.btn-outline-purple:hover {
    background-color: #7b68ee;
    border-color: #7b68ee;
    color: white;
}

.table th {
    border-top: none;
    font-weight: 600;
}

.card {
    border-radius: 10px;
}

.badge {
    font-size: 0.8em;
}
</style>

<script>
function updateStock(inventoryId, currentStock) {
    const newStock = prompt(`Current Stock: ${currentStock}\nEnter new stock quantity:`, currentStock);
    if (newStock !== null && newStock !== currentStock && !isNaN(newStock) && newStock >= 0) {
        // Get anti-forgery token
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        // Make AJAX call to update stock
        fetch('/Pharmacy/UpdateStock', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `__RequestVerificationToken=${encodeURIComponent(token)}&inventoryId=${inventoryId}&newStock=${newStock}`
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload(); // Refresh the page to show updated stock
            } else {
                alert('Error: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error updating stock. Please try again.');
        });
    }
}

function editInventory(inventoryId) {
    window.location.href = '/Pharmacy/EditInventory/' + inventoryId;
}

function viewInventoryDetails(inventoryId) {
    window.location.href = '/Pharmacy/InventoryDetails/' + inventoryId;
}

// Add CSRF token to AJAX requests
$(document).ready(function() {
    // Auto-refresh stock status colors
    setInterval(function() {
        // Update any time-sensitive information like expiry warnings
        location.reload();
    }, 60000); // Refresh every minute
});
</script>
