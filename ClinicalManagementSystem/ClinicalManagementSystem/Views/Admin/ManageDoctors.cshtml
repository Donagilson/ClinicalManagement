@model IEnumerable<ClinicalManagementSystem2025.Models.Doctor>
@{
    ViewData["Title"] = "Manage Doctors";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-olive">
            <i class="fas fa-user-md me-2"></i>Manage Doctors
        </h1>
        <div>
            <a asp-action="AddDoctor" class="btn btn-olive me-2">
                <i class="fas fa-user-plus me-1"></i>Add New Doctor
            </a>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
            </a>
        </div>
    </div>

    <!-- Success / Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card border-olive dashboard-card">
                <div class="card-body text-center">
                    <i class="fas fa-user-md fa-3x text-olive mb-3"></i>
                    <h5 class="card-title text-olive">Total Doctors</h5>
                    <h3 class="text-olive">@Model.Count()</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-olive dashboard-card">
                <div class="card-body text-center">
                    <i class="fas fa-check-circle fa-3x text-olive mb-3"></i>
                    <h5 class="card-title text-olive">Active Doctors</h5>
                    <h3 class="text-olive">@Model.Count(d => d.IsActive)</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-olive dashboard-card">
                <div class="card-body text-center">
                    <i class="fas fa-building fa-3x text-olive mb-3"></i>
                    <h5 class="card-title text-olive">Departments</h5>
                    <h3 class="text-olive">@Model.Where(d => d.Department != null).Select(d => d.Department.DepartmentName).Distinct().Count()</h3>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card border-olive dashboard-card">
                <div class="card-body text-center">
                    <i class="fas fa-stethoscope fa-3x text-olive mb-3"></i>
                    <h5 class="card-title text-olive">Specializations</h5>
                    <h3 class="text-olive">@Model.Where(d => !string.IsNullOrEmpty(d.Specialization)).Select(d => d.Specialization).Distinct().Count()</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="card shadow-sm border-olive mb-4">
        <div class="card-header bg-olive text-white">
            <h5 class="card-title mb-0">
                <i class="fas fa-search me-2"></i>Search & Filter Doctors
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchTerm" placeholder="Search by name, specialization...">
                        <button class="btn btn-olive" type="button" id="btnSearch">
                            <i class="fas fa-search"></i>
                        </button>
                        <button class="btn btn-outline-secondary" type="button" id="btnClearSearch">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="departmentFilter">
                        <option value="">All Departments</option>
                        @foreach (var dept in Model.Where(d => d.Department != null).Select(d => d.Department).GroupBy(d => d.DepartmentId).Select(g => g.First()))
                        {
                            <option value="@dept.DepartmentName">@dept.DepartmentName</option>
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="active">Active Only</option>
                        <option value="inactive">Inactive Only</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Doctors Table -->
    <div class="card shadow-sm">
        <div class="card-header bg-olive text-white d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">
                <i class="fas fa-list me-2"></i>All Doctors
            </h5>
            <span class="badge bg-light text-olive" id="doctorCount">@Model.Count() doctors</span>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="doctorsTable">
                        <thead class="bg-light text-olive">
                            <tr>
                                <th>ID</th>
                                <th>Doctor Name</th>
                                <th>Specialization</th>
                                <th>Department</th>
                                <th>Qualification</th>
                                <th>Experience</th>
                                <th>Fee</th>
                                <th>Availability</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doctor in Model.OrderBy(d => d.User?.FullName))
                            {
                                <tr>
                                    <td>
                                        <span class="badge bg-olive">@doctor.DoctorId</span>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-user-md text-olive me-2"></i>
                                            <div>
                                                <strong>@doctor.User?.FullName</strong>
                                                <br>
                                                <small class="text-muted">@doctor.User?.Email</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@doctor.Specialization</span>
                                    </td>
                                    <td>
                                        <i class="fas fa-building text-muted me-1"></i>
                                        @doctor.Department?.DepartmentName
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(doctor.Qualification))
                                        {
                                            <span class="text-muted">@doctor.Qualification</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (doctor.Experience.HasValue)
                                        {
                                            <span class="text-muted">@doctor.Experience years</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (doctor.ConsultationFee.HasValue)
                                        {
                                            <strong class="text-olive">â‚¹@doctor.ConsultationFee.Value.ToString("N2")</strong>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (doctor.AvailableFrom.HasValue && doctor.AvailableTo.HasValue)
                                        {
                                            <small class="text-muted">
                                                @string.Format("{0:hh\\:mm}", doctor.AvailableFrom.Value) -
                                                @string.Format("{0:hh\\:mm}", doctor.AvailableTo.Value)
                                            </small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not Set</span>
                                        }
                                    </td>
                                    <td>
                                        @if (doctor.IsActive)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <a asp-action="EditDoctor" asp-route-id="@doctor.DoctorId"
                                               class="btn btn-outline-olive" title="Edit Doctor">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-outline-danger" title="Delete Doctor"
                                                    data-bs-toggle="modal" data-bs-target="#deleteDoctorModal"
                                                    data-doctorid="@doctor.DoctorId"
                                                    data-doctorname="@doctor.User?.FullName">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-4">
                    <i class="fas fa-user-md fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No Doctors Found</h5>
                    <p class="text-muted">No doctors have been registered yet.</p>
                    <a asp-action="AddDoctor" class="btn btn-olive">
                        <i class="fas fa-user-plus me-1"></i>Add First Doctor
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Doctor Modal -->
<div class="modal fade" id="deleteDoctorModal" tabindex="-1" aria-labelledby="deleteDoctorModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteDoctorModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteDoctorForm" method="post">
                <div class="modal-body">
                    <input type="hidden" id="deleteDoctorId" name="id">
                    <p>Are you sure you want to delete doctor: <strong id="deleteDoctorName"></strong>?</p>
                    <p class="text-danger"><small>This action cannot be undone. The doctor profile will be permanently removed.</small></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete Doctor</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Auto-hide success/error messages
            setTimeout(() => {
                $('.alert').alert('close');
            }, 5000);

            // Search functionality
            $('#btnSearch, #searchTerm').on('click keypress', function(e) {
                if (e.type === 'click' || e.which === 13) {
                    performSearch();
                }
            });

            // Clear search
            $('#btnClearSearch').click(function() {
                $('#searchTerm').val('');
                $('#departmentFilter').val('');
                $('#statusFilter').val('');
                $('#doctorsTable tbody tr').show();
                updateDoctorCount();
            });

            // Filter by department
            $('#departmentFilter').change(function() {
                performSearch();
            });

            // Filter by status
            $('#statusFilter').change(function() {
                performSearch();
            });

            function performSearch() {
                var searchTerm = $('#searchTerm').val().toLowerCase();
                var departmentFilter = $('#departmentFilter').val().toLowerCase();
                var statusFilter = $('#statusFilter').val().toLowerCase();
                var visibleCount = 0;

                $('#doctorsTable tbody tr').each(function() {
                    var row = $(this);
                    var doctorName = row.find('td:nth-child(2)').text().toLowerCase();
                    var specialization = row.find('td:nth-child(3)').text().toLowerCase();
                    var department = row.find('td:nth-child(4)').text().toLowerCase();
                    var qualification = row.find('td:nth-child(5)').text().toLowerCase();
                    var status = row.find('td:nth-child(9) .badge').hasClass('bg-success') ? 'active' : 'inactive';

                    var matchesSearch = searchTerm === '' ||
                                      doctorName.includes(searchTerm) ||
                                      specialization.includes(searchTerm) ||
                                      qualification.includes(searchTerm);

                    var matchesDepartment = departmentFilter === '' || department.includes(departmentFilter);
                    var matchesStatus = statusFilter === '' || status === statusFilter;

                    if (matchesSearch && matchesDepartment && matchesStatus) {
                        row.show();
                        visibleCount++;
                    } else {
                        row.hide();
                    }
                });

                updateDoctorCount(visibleCount);
            }

            function updateDoctorCount(count) {
                if (count === undefined) {
                    count = $('#doctorsTable tbody tr:visible').length;
                }
                var totalCount = @Model.Count();
                var countText = count + ' doctor' + (count !== 1 ? 's' : '');
                if (count < totalCount) {
                    countText += ' (filtered from ' + totalCount + ')';
                }
                $('#doctorCount').text(countText);
            }

            // Delete Doctor Modal
            $('#deleteDoctorModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var doctorId = button.data('doctorid');
                var doctorName = button.data('doctorname');

                var modal = $(this);
                modal.find('#deleteDoctorId').val(doctorId);
                modal.find('#deleteDoctorName').text(doctorName);
                modal.find('#deleteDoctorForm').attr('action', '/Admin/DeleteDoctor');
            });
        });
    </script>
}
